# apiVersion: v1
# kind: Secret
# metadata:
#   name: demo-app-secrets
# type: Opaque
# data:
#   # Note: these secrets are base-64 encoded. To get the base-64 repr of a
#   # string, run `echo -n "SECRET-HERE" | base64`
#   username: cG9zdGdyZXM=
#   password: cG9zdGdyZXM=
#   db: ZGI=
#   db-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQGRlbW8tYXBwLWRiLXNlcnZpY2U6NTQzMi9kYj9zY2hlbWE9cHVibGlj

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k3s-demo
  labels:
    app: k3s-demo
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: k3s-demo
  template:
    metadata:
      labels:
        app: k3s-demo
    spec:
      containers:
        # TODO: image crashloops when no DB found, consider creating non-db version
        - image: skunst/k3s-demo
          imagePullPolicy: "Always"
          name: k3s-demo
          ports:
            - containerPort: 3000
          # env:
          #   value must match of the service in ./demo-app-db.yml
          #   - name: DB_HOST
          #     value: demo-app-db-service
          #   - name: DB_USER
          #     valueFrom:
          #       secretKeyRef:
          #         name: demo-app-secrets
          #         key: username
          #   - name: DB_PASS
          #     valueFrom:
          #       secretKeyRef:
          #         name: demo-app-secrets
          #         key: password
          #   - name: DB_NAME
          #     valueFrom:
          #       secretKeyRef:
          #         name: demo-app-secrets
          #         key: db
          #   - name: DATABASE_URL
          #     valueFrom:
          #       secretKeyRef:
          #         name: demo-app-secrets
          #         key: db-url

---
apiVersion: v1
kind: Service
metadata:
  name: svc-k3s-demo
  labels:
    app: k3s-demo
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: k3s-demo

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-k3s-demo
  annotations:
    kubernetes.io/ingress.class: nginx
    # ⬇️ add this annotation (change to "letsencrypt-production" for prod cert)
    # cert-manager.io/cluster-issuer: "letsencrypt-staging"
spec:
  # ⬇️ add this tls spec (change host accordingly)
  # tls:
  #   - hosts:
  #       - k8s.kunst.me
  #     ⬇️ use "tls-production" for prod cert
  #     secretName: tls-staging
  rules:
    - host: k8s.kunst.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: svc-k3s-demo
                port:
                  number: 80
---

